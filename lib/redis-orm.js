// Generated by CoffeeScript 1.4.0
(function() {
  var RedisORM,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  RedisORM = (function(_super) {
    var NO_REDIS_URL;

    __extends(RedisORM, _super);

    function RedisORM() {
      return RedisORM.__super__.constructor.apply(this, arguments);
    }

    NO_REDIS_URL = new Error("No url configured for RedisORM mixin!");

    RedisORM.addTheseToClass = {
      /*
          #   db
          #   returns a redis client bound to redisURL:dbNum
          #   the redis client can is cached globally by redisURL:dbNum
          #   defaults redisURL to redis::localhost:6379
          #   defaults dbNum to 0
      */

      rorm_db: function() {
        var dbNum, lookup, url;
        if (this._rorm_db != null) {
          return this._rorm_db;
        }
        url = this.mixinConfig.url || global.redisURL || global.REDIS_URL || process.env.REDIS_URL || process.env.REDISTOGO_URL || 'redis://127.0.0.1:6379/';
        dbNum = this.mixinConfig.dbNum || global.dbNum || 0;
        lookup = "" + url + "[" + dbNum + "]";
        global.rorm_redisClients || (global.rorm_redisClients = {});
        rorm_redisClients[lookup] || (rorm_redisClients[lookup] = (require('redis-url')).connect(url).select(dbNum));
        return this._rorm_db = rorm_redisClients[lookup];
      },
      find: function(info) {}
    };

    RedisORM.addTheseToInstance = {
      save: function() {}
    };

    return RedisORM;

  })(Mixin);

  global.RedisORM = RedisORM;

}).call(this);
